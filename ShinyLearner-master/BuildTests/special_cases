#!/bin/bash

set -euo pipefail

currentDir=$1
imageName=$2
version=$3
verbose=$4
logFile=$5

inputDir=$(pwd)/input
outputDir=$(pwd)/output
logFile=$outputDir/$logFile

classifAlgo="AlgorithmScripts/Classification/tsv/mlr/svm/default*"
expectedNumAlgorithms=$(ls $currentDir/$classifAlgo | wc -l)

function testMultipleInputFiles {
  signal=$1

  description=${signal}SignalMultipleDataFiles
  dataFiles="${signal}Signal_Continuous_NoClass.tsv.gz,${signal}Signal_Discrete.tsv.gz"
  specificOutputDir=$outputDir/$(basename $0)_${description}_montecarlo

  bash run_docker_command $inputDir $specificOutputDir $imageName $version "UserScripts/classification_montecarlo --data \"$dataFiles\" --description "$description" --iterations 1 --classif-algo \"$classifAlgo\" $verbose --impute true" 2>&1 | tee -a $logFile

  python3 CheckAccuracy.py classification montecarlo $description "$specificOutputDir/Metrics.tsv" Algorithm $expectedNumAlgorithms 0 2>&1 | tee -a $logFile
}

testMultipleInputFiles Strong
testMultipleInputFiles No

#####################################
# Checks for missing value scenarios
#####################################

# Make sure we get a warning when instance is missing class value
python3 KeepAllButLastLine.py input/StrongSignal_Class.tsv.gz input/StrongSignal_Class2.tsv.gz

description=StrongSignal_MissingDependentVariable
dataFiles="StrongSignal_Continuous_NoClass.tsv.gz,StrongSignal_Class2.tsv.gz"
specificOutputDir=$outputDir/$(basename $0)_${description}_montecarlo

bash run_docker_command $inputDir $specificOutputDir $imageName $version "UserScripts/classification_montecarlo --data \"$dataFiles\" --description "$description" --iterations 1 --classif-algo \"$classifAlgo\" $verbose --impute true" 2>&1 | tee -a $logFile

python3 CheckAccuracy.py classification montecarlo $description "$specificOutputDir/Metrics.tsv" Algorithm $expectedNumAlgorithms 0 2>&1 | tee -a $logFile
python3 CheckLogForMessage.py $specificOutputDir/Log.txt "After filtering, data were available for 59 instances and 101 data points" 2>&1 | tee -a $logFile

# Make sure imputation occurs when instance has class value but no data
python3 KeepAllButLastLine.py input/StrongSignal_Continuous_NoClass.tsv.gz input/StrongSignal_Continuous_NoClass2.tsv.gz

description=StrongSignal_MissingIndependentVariable
dataFiles="StrongSignal_Continuous_NoClass2.tsv.gz,StrongSignal_Class.tsv.gz"
specificOutputDir=$outputDir/$(basename $0)_${description}_montecarlo

bash run_docker_command $inputDir $specificOutputDir $imageName $version "UserScripts/classification_montecarlo --data \"$dataFiles\" --description "$description" --iterations 1 --classif-algo \"$classifAlgo\" $specificOutputDir $verbose --impute true" 2>&1 | tee -a $logFile

python3 CheckAccuracy.py classification montecarlo $description "$specificOutputDir/Metrics.tsv" Algorithm $expectedNumAlgorithms 0 2>&1 | tee -a $logFile
python3 CheckLogForMessage.py $specificOutputDir/Log.txt "After filtering, data were available for 60 instances and 101 data points" 2>&1 | tee -a $logFile
python3 CheckLogForMessage.py $specificOutputDir/Log.txt "More than 50% of data values were missing for 1 instance(s), which exceeds the threshold for imputation. These data were removed." 2>&1 | tee -a $logFile

#####################################
# Test different file formats
#####################################

description=StrongSignal_arff
dataFiles="StrongSignal_Both.arff.gz"
specificOutputDir=$outputDir/$(basename $0)_${description}_montecarlo

bash run_docker_command $inputDir $specificOutputDir $imageName $version "UserScripts/classification_montecarlo --data \"$dataFiles\" --description "$description" --iterations 1 --classif-algo \"$classifAlgo\" $verbose --impute true" 2>&1 | tee -a $logFile

python3 CheckAccuracy.py classification montecarlo $description "$specificOutputDir/Metrics.tsv" Algorithm $expectedNumAlgorithms 0 2>&1 | tee -a $logFile

description=StrongSignal_ttsv
dataFiles="StrongSignal_Both.ttsv.gz"
specificOutputDir=$outputDir/$(basename $0)_${description}_montecarlo

bash run_docker_command $inputDir $specificOutputDir $imageName $version "UserScripts/classification_montecarlo --data \"$dataFiles\" --description "$description" --iterations 1 --classif-algo \"$classifAlgo\" $verbose --impute true" 2>&1 | tee -a $logFile

python3 CheckAccuracy.py classification montecarlo $description "$specificOutputDir/Metrics.tsv" Algorithm $expectedNumAlgorithms 0 2>&1 | tee -a $logFile

#####################################
# Test different scaling techniques
#####################################

description=StrongSignal_Both
dataFiles="StrongSignal_Both.tsv.gz"
specificOutputDir=$outputDir/$(basename $0)_${description}_montecarlo

rm -rf $specificOutputDir/*

for scaler in standard robust minmax maxabs power quantnorm quantunif normalizer
do
  bash run_docker_command $inputDir $specificOutputDir $imageName $version "UserScripts/classification_montecarlo --data \"$dataFiles\" --description "$description" --iterations 1 --classif-algo \"$classifAlgo\" $verbose --impute true --scale $scaler" 2>&1 | tee -a $logFile

  python3 CheckAccuracy.py classification montecarlo $description "$specificOutputDir/Metrics.tsv" Algorithm $expectedNumAlgorithms 0 2>&1 | tee -a $logFile

  rm -rf $specificOutputDir/*
done
