#!/bin/bash

set -euo pipefail

source scripts/shared_functions

analysisDataFile="$1"
description="$2"
outerNumIterations="$3"
innerNumIterations="$4"
verbose="$5"
fsAlgos="$6"
numFeaturesOptions="$7"
classifAlgos="$8"
outSelectedFeaturesFile="$9"
outPredictionsFile="${10}"
outMetricsFile="${11}"
outNestedSelectedFeaturesFile="${12}"
outNestedSummarizedSelectedFeaturesFile="${13}"
outNestedPredictionsFile="${14}"
outNestedMetricsFile="${15}"
outNestedFeatureSelectionBenchmarkFile="${16}"
outNestedClassificationBenchmarkFile="${17}"
outNestedBestFile="${18}"
validationType="${19}"
randomSeed="${20}"
proportionTrain="${21}"
impute="${22}"
tmpDir="${23}"
outLogFile="${24}"
numCores="${25}"

source scripts/setup

python3 scripts/ExtractSampleInfo.py "$analysisDataFile" "$description" $tmpDir/allid $tmpDir/classes

if [[ "$validationType" == "montecarlo" ]]
then
  python3 scripts/AssignTrainingTesting.py $tmpDir/allid $tmpDir/classes "$iterationOutputHeader" $tmpDir/ott $outerNumIterations $randomSeed $proportionTrain
  python3 scripts/AssignTrainingTesting.py $tmpDir/ott $tmpDir/classes "Inner" $tmpDir/ie $innerNumIterations $randomSeed $proportionTrain
else
  python3 scripts/AssignCrossValidation.py $tmpDir/allid $tmpDir/classes "$iterationOutputHeader" $tmpDir/ott $outerNumIterations $randomSeed
  python3 scripts/AssignCrossValidation.py $tmpDir/ott $tmpDir/classes "Inner" $tmpDir/ie $innerNumIterations $randomSeed
fi

## Prepare inner experiment files
python3 scripts/AddAlgorithmScripts.py $tmpDir/ie "$fsAlgos" $tmpDir/ie2 $verbose
python3 scripts/AddAlgorithmScripts.py $tmpDir/ie "$classifAlgos" $tmpDir/ie3 $verbose

echo "Selecting features for inner iterations..." | timestamp | tee -a "$outLogFile"
java $(getJavaArgs) -jar shinylearner.jar ANALYSIS_DATA_FILE="$analysisDataFile" EXPERIMENT_FILE=$tmpDir/ie2 OUTPUT_FEATURES_FILE_PATH="$tmpDir/if" OUTPUT_BENCHMARK_FILE_PATH="$tmpDir/ifb" DEBUG=$verbose NUM_CORES=$numCores TEMP_DIR=$tmpDir 2> /dev/null

## Add selected features to inner classification files
python3 scripts/AppendInnerSelectedFeatures.py $tmpDir/if $tmpDir/ie3 "$numFeaturesOptions" $tmpDir/isftt

echo "Performing classification using selected features for inner iterations..." | timestamp | tee -a "$outLogFile"
java $(getJavaArgs) -jar shinylearner.jar ANALYSIS_DATA_FILE=$analysisDataFile EXPERIMENT_FILE=$tmpDir/isftt DEBUG=$verbose OUTPUT_BENCHMARK_FILE_PATH=$tmpDir/icb OUTPUT_PREDICTIONS_FILE_PATH=$tmpDir/ip NUM_CORES=$numCores TEMP_DIR=$tmpDir 2> /dev/null

echo "Calculating performance metrics for inner iterations..." | timestamp | tee -a "$outLogFile"
Rscript --vanilla scripts/CalculateClassificationMetrics.R "$tmpDir/ip" "$tmpDir/im"

echo "Parsing inner classification results..." | timestamp | tee -a "$outLogFile"
python3 scripts/ReformatInnerResults_FeatureSelection.py $tmpDir/im $tmpDir/ibrf

echo "Identifying best combination of algorithms and number of features for inner iterations..." | timestamp | tee -a "$outLogFile"
Rscript --vanilla scripts/SelectBestInnerResults_FeatureSelection.R $tmpDir/ibrf $tmpDir/ott $tmpDir/ofse $tmpDir/onfe $tmpDir/ocle $tmpDir/ibest 2> $errFile
printError $verbose $errFile

echo "Selecting features on outer iterations..." | timestamp | tee -a "$outLogFile"
java $(getJavaArgs) -jar shinylearner.jar ANALYSIS_DATA_FILE=$analysisDataFile EXPERIMENT_FILE=$tmpDir/ofse DEBUG=$verbose OUTPUT_FEATURES_FILE_PATH=$tmpDir/of NUM_CORES=$numCores TEMP_DIR=$tmpDir 2> /dev/null

## Add selected features to outer classification files
python3 scripts/AppendOuterSelectedFeatures.py $tmpDir/of $tmpDir/ocle $tmpDir/onfe $tmpDir/ocle2

echo "Performing classification using selected features for outer iterations..." | timestamp | tee -a "$outLogFile"
java $(getJavaArgs) -jar shinylearner.jar ANALYSIS_DATA_FILE=$analysisDataFile EXPERIMENT_FILE=$tmpDir/ocle2 DEBUG=$verbose OUTPUT_PREDICTIONS_FILE_PATH=$tmpDir/op NUM_CORES=$numCores TEMP_DIR=$tmpDir 2> /dev/null

echo "Calculating performance metrics for outer iterations..." | timestamp | tee -a "$outLogFile"
Rscript --vanilla scripts/CalculateClassificationMetrics.R "$tmpDir/op" "$tmpDir/om"

function parseOuterFileA {
  if [[ "$3" != "" ]]
  then
    python3 scripts/ParseNestedResults.py $1 $iterationOutputHeader $3 $1.sorttemp
    sortFile $1.sorttemp "$2" "$3"
  fi
}

function parseOuterFileB {
  if [[ "$3" != "" ]]
  then
    python3 scripts/ParseNestedResults_FeatureSelection.py $1 $iterationOutputHeader $1.sorttemp
    sortFile $1.sorttemp "$2" "$3"
  fi
}

function parseOuterFileC {
  if [[ "$3" != "" ]]
  then
    python3 scripts/ParseNestedResults_FeatureSelection3.py $1 $iterationOutputHeader $1.sorttemp
    sortFile $1.sorttemp "$2" "$3"
  fi
}

echo "Preparing output files..." | timestamp | tee -a "$outLogFile"
parseOuterFileC $tmpDir/ocle2 "-k1,1 -k2,2n -k3" "$outSelectedFeaturesFile"
parseOuterFileB $tmpDir/op "-k1,1 -k2,2n -k3" "$outPredictionsFile"
parseOuterFileB $tmpDir/om "-k1,1 -k2,2n -k3" "$outMetricsFile"

#cp $tmpDir/op /tmp/
#cp $outPredictionsFile /tmp/
#cp $tmpDir/om /tmp/
#cp $outMetricsFile /tmp/

function copyInnerFileA {
  if [[ "$3" != "" ]]
  then
    python3 scripts/ParseNestedResults2.py $1 $iterationOutputHeader $1.sorttemp
    sortFile $1.sorttemp "$2" "$3"
  fi
}

function copyInnerFileB {
  if [[ "$3" != "" ]]
  then
    python3 scripts/ParseNestedResults_FeatureSelection2.py $1 $iterationOutputHeader $1.sorttemp
    sortFile $1.sorttemp "$2" "$3"
  fi
}

copyInnerFileA $tmpDir/if "-k1,1 -k2,2n -k3,3n -k4" "$outNestedSelectedFeaturesFile"
copyInnerFileB $tmpDir/ip "-k1,1 -k2,2n -k3,3n -k4,4 -k5,5n -k6" "$outNestedPredictionsFile"
copyInnerFileB $tmpDir/im "-k1,1 -k2,2n -k3,3n -k4" "$outNestedMetricsFile"
copyInnerFileA $tmpDir/ifb "-k1,1 -k2,2n -k3,3n -k4,4" "$outNestedFeatureSelectionBenchmarkFile"
copyInnerFileB $tmpDir/icb "-k1,1 -k2,2n -k3,3n -k4,4 -k5,5n -k6" "$outNestedClassificationBenchmarkFile"

if [[ "$outNestedSummarizedSelectedFeaturesFile" != "" ]]
then
  python3 scripts/BordaCountFeatures.py "$outNestedSelectedFeaturesFile" "$outNestedSummarizedSelectedFeaturesFile"
fi

python3 scripts/SplitDescriptionColumn.py $tmpDir/ibest $iterationOutputHeader $tmpDir/ibest.sorttemp
sortFile $tmpDir/ibest.sorttemp "-k1,1 -k2,2 -k3,3n -k4,4 -k5" "$outNestedBestFile"
